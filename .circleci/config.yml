# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.12
        environment:
          REDIS_HOST: localhost:6379
          DB_HOST: localhost
          DB_PASS: $DB_PASS
          CARTSERVICE: http://localhost:8081
          EMAILSERVICE: http://localhost:8002
          PAYMENTSERVICE: http://localhost:8000
          SHIPPINGSERVICE: http://localhost:8001
          PRODUCTSERVICE: http://localhost:8082
      - image: circleci/redis:latest
      - image: circleci/postgres:latest
        environment:
          POSTGRES_DB: products
      - image: adenoudsten96/shippingservice:latest
        environment:
          PORT: "8001"
      - image: adenoudsten96/paymentservice:latest
        environment:
            PORT: "8000"
      - image: adenoudsten96/emailservice:latest
        environment:
            PORT: "8002"
      - image: adenoudsten96/checkoutservice:latest
        environment:
          CARTSERVICE: http://localhost:8081
          EMAILSERVICE: http://localhost:8002
          PAYMENTSERVICE: http://localhost:8000
          SHIPPINGSERVICE: http://localhost:8001
          PRODUCTSERVICE: http://localhost:8082
      - image: adenoudsten96/productservice:latest
        environment:
          DB_HOST: localhost:5432
          DB_PASS: Appelflap1
      - image: adenoudsten96/cartservice:latest
        environment:
          REDIS_HOST: localhost:6379

    working_directory: /go/src/github.com/adenoudsten96/microservices-shop
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-pkg-cache
      - run: 
          name: Get Go packages
          command: go get -v -t -d ./...
      - run: 
          name: Run Unit Tests
          command: go test -v ./services/...
      - save_cache:
          paths:
            - "/go/pkg"
          key: v1-pkg-cache
      - run: 
          name: Build Docker images
          command: cd services; for d in */ ; do cd $d && dir=$(echo $d | tr -d '/') && docker build -t adenoudsten96/$dir:$CIRCLE_BUILD_NUM . && cd .. ; done
      - run:
          name: Log in to Docker
          command: echo "$DOCKERHUB_PASS" | docker login -u "adenoudsten96" --password-stdin
      - run:
          name: Push all new Docker images
          command: for d in */ ; do cd $d && dir=$(echo $d | tr -d '/') && docker push adenoudsten96/$dir:$CIRCLE_BUILD_NUM . && cd .. ; done

workflows:
  version: 2
  build-master:
    jobs:
      - build:
          context: Password