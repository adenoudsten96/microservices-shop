# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.12
        environment:
          REDIS_HOST: localhost:6379
          DB_HOST: localhost:5432
          DB_PASS: Appelflap1
          CARTSERVICE: http://cartservice:8081
          EMAILSERVICE: http://emailservice:8002
          PAYMENTSERVICE: http://paymentservice:8000
          SHIPPINGSERVICE: http://shippingservice:8001
          PRODUCTSERVICE: http://productservice:8082
      - image: circleci/redis:latest
      - image: circleci/postgres:latest
        environment:
          POSTGRES_DB: products
      - image: adenoudsten96/shippingservice:latest
        environment:
          PORT: "8001"
      - image: adenoudsten96/paymentservice:latest
        environment:
            PORT: "8000"
      - image: adenoudsten96/emailservice:latest
        environment:
            PORT: "8002"
      - image: adenoudsten96/checkoutservice:latest
        environment:
          CARTSERVICE: http://cartservice:8081
          EMAILSERVICE: http://emailservice:8002
          PAYMENTSERVICE: http://paymentservice:8000
          SHIPPINGSERVICE: http://shippingservice:8001
          PRODUCTSERVICE: http://productservice:8082
      - image: adenoudsten96/productservice:latest
        environment:
          DB_HOST: localhost:5432
          DB_PASS: Appelflap1
      - image: adenoudsten96/cartservice:latest
        environment:
          REDIS_HOST: localhost:6379

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/adenoudsten96/microservices-shop
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: go get -v -t -d ./...
      - run: go test -v ./services/...